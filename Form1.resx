<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>32, 0</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>187, 1</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>294, 2</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAgAAAAIAAAACAAAAAgAAAAIBAAACAQAAAgEAAAIBAAACAQAAAgEAAAIBAAACAQAAAQMAAAEDAAAB
        AwAAAQMAAAEDAAABAwAAAQMAAAEDAAEAAwABAAMAAQEBAAEBAQABAQEAAQEBAAECAAABAgAAAwIAAAMC
        AAADAgAAAwIAAAACAAAAAgAAAAIAAAACAAAAAgEAAAIBAAACAQAAAgEAAAIBAAACAQAAAgEAAAIBAAAB
        AwAAAQMAAAEDAAABAwAAAQMAAAEDAAABAwAAAQMAAQADAAEAAwABAQEAAQEBAAEBAQABAQEAAQIAAAEC
        AAADAgAAAwIAAAMCAAADAgAAAAIAAAACAAAAAgAAAAIAAAACAQAAAgEAAAIBAAACAQAAAgEAAAIBAAAC
        AQAAAgEAAAEDAAABAwAAAQMAAAEDAAABAwAAAQMAAAEDAAABAwABAAMAAQADAAEBAQABAQEAAQEBAAEB
        AQABAgAAAQIAAAMCAAADAgAAAwIAAAMCAAAAAgAAAAIAAAACAAAAAgAAAAIBAAACAQAAAgEAAAIBAAAC
        AQAAAgEAAAIBAAACAQAAAQMAAAEDAAABAwAAAQMAAAEDAAABAwAAAQMAAAEDAAEAAwABAAMAAQEBAAEB
        AQABAQEAAQEBAAECAAABAgAAAwIAAAMCAAADAgAAAwIAAAACAAAAAgAAAAIAAAACAAAAAgEAAAIBAAAC
        AQAAAgEAAAIBAAACAQAAAgEAAAIBAAABAwAAAQMAAAEDAAABAwAAAQMAAAEDAAABAwAAAQMAAQADAAEA
        AwABAQEAAQEBAAEBAQABAQEAAQIAAAECAAADAgAAAwIAAAMCAAADAgAAAAIAAAACAAAAAgAAAAIAAAAC
        AQAAAgEAAAIBAAACAQAAAgEAAAIBAAACAQAAAgEAAAEDAAABAwAAAQMAAAEDAAABAwAAAQMAAAEDAAAB
        AwABAAMAAQADAAEBAQABAQEAAQEBAAEBAQABAgAAAQIAAAMCAAADAgAAAwIAAAMCAAAAAgAAAAIAAAAC
        AAAAAgAAAAIBAAACAQAAAgEAAAIBAAACAQAAAgEAAAIBAAACAQAAAQMAAAEDAAABAwAAAQMAAAEDAAAB
        AwAAAQMAAAEDAAEAAwABAAMAAQEBAAEBAQABAQEAAQEBAAECAAABAgAAAwIAAAMCAAADAgAAAwIAAAEC
        AAABAgAAAAIAAAACAAABAgAAAwQAAAUHAAAFCQAABQgAAAUJAAAFCgAABQoAAAUJAAAFCQAABQkAAAUK
        AAADCgAABQkAAAcJAAAHCQAACQkAAAcIAAAFCAAABQgAAAUIAAAFBgAABQIAAAMBAQADAQEAAwIAAAMB
        AQADAQEAcnBuAHV0cgBvb28AdnZ0AHV1bgB4d14AfoFJAHyBPgCGiUkAiJBKAGFtGQJjcRgLXWkXFl1p
        FyFdahYoXWsULFdlESxeahgoZ2wZIWdpFxZpaxsLZ2oeAo+VVQCNlVYAc3o7AHV3SQB1bGUAc2dwAG5o
        bABraGkAaWhqAGlnbAB5cnMAcGpnAHp7agB2eF4AgoFiAHd4RgBtcCIGZ20RImltFk5qcBR8ZXAGo2Vy
        A8BlbwfUZW8H4GNyA+djcwHqXXAC6l1sAedkbALga28G1G1xBcBnbwejZ3IVfGRwF05kbRUibG8oBnVv
        TAB4cV4AdXJaAHFxXQBva2oAbWhwAHdscAB/d2sAhYJTAGlsJwFnaxsbZWsUYWJrDqxhagvgbXIU+Wlt
        D/9pbg3/ZWoK/2ZrDf9nbQz/ZXAG/2NxBP9icgf/ZXMM/2lxEP9lbgv/XmkA/2NuA/9gbwb/YnEK+WFu
        DOBiaw6sY2kUYWFpFhtweiQBdXo7AHpxYgB6aXIAgXpkAIB7UwBubiMUaW4NcWVoBtNlawj7YW4M/2Jv
        Df9nbwz/bHER/2lsEf9rbhT/aWsU/2drD/9lbwn/Y28J/15qCf9+iDD/kpVQ/5CTTv9udx//YnAM/2Fx
        Bv9icgf/YnEK/2JuCP9hbwL7YG8A02Z1BXFsdR0UdGxHAHtrXgCCizwAZm4ZL2RqB7pucw78am4Q/2Jn
        Df9lchf/WmoK/2NvCf9pcgz/YGYK/2JmD/9lahP/ZWsP/1tlBP9haQ3/Y20Z/7e7f/////H////y/7q+
        if9pdif/WmsJ/15vBv9ebgn/ZHIL/15uAv9hbwL/Ym8G/GVrD7pvbScvenU7AGZzCC9ibgjLYWoL/3J4
        Jf+Mjkz/iYxO/4SOSP9/jUD/ancj/4mSQf+Ok07/iY5L/42STf+Jj0j/h4tI/2tvLf9iaSb/hYhY///+
        +P///v//6OrQ/5egbP+DjkT/hpJA/3yIO/+BjUD/dYAv/15qEf9ibw3/YGoJ/2NnEMtqbRovYWwBr2Fp
        Df9vdTT/wcOc////8v////D/5+3H/9DWqv/e47r////h////5v/x8db/2Nq6/+vszv////P/6+fR/36C
        Tf9nbjj/2t7G//z+9///////7O3d/9jYtv/g4Lf/5urJ//z/4//h5cX/k5pl/15wEv9bbAP/XGYK/2Fn
        Eq9udhr1Y20Z/2FoLP/AxaT///////78//+ytJ//b3NS/7y9pP////H////6/8zPxf9rb1P/m5yF///9
        ////////3d27/2twP/+krYT//v/q////+v/Z2M3/dndU/29xSv+OlXn/9/3s////+P/p7ND/bHst/1tt
        CP9gaw7/aXAY9aCsaPVtezD/WmkV/4qUVf////T//////9rcwv9ma0P/eoBb/+rz2P/4////4/Li/214
        Qv9pcjz/3uTY//3////+/e3/k5Rx/2x1P//W36n/7O3P/9TXsv9uezP/UWQS/15vL//O2bH/////////
        9/+ao23/YG0e/2VsEv9nbQ/zyNSitJGdYP9WYw//eoQ8//P14P////7/9PjX/42UY/9jbTX/yNGn//f/
        +f/8//f/pK5t/1xmIv+ps5b////9////9f/Fxan/aHE5/4CLTv+JjWj/iI1j/3ODOv9xhDH/b387/7K7
        jv////T////1/9PWpv9nbiT/Y2oT/2NrCqfY37wzwcebzIiNUf+an2j/7PHV//H23//f5Lz/gIhO/1Vg
        Ef+MmFT/5evT//T24v/Nz5P/bW8t/4GDWv/a3MH/8PHa/9PWuv+Ol2j/2OGw/93iwf/b3sD/4efB/93k
        vP/b3rn/4+LC//7z3P//89P/vrl9/29wIv9nbhbDYmoQKKmslwDP0rYwvLyTt5GSZvt7g13/b3tS/294
        Qv9gayL/XmsO/2lzHf94gE3/f4NV/3l6Nf9wbyf/a24w/3V5RP92fUz/c3tK/2ZwOP90fkb/d35N/3h+
        UP9+g1f/fYJY/3t9Vv+Bf1f/hn5S/4R8RP90byf6a2ocr2hsJSiRllMAqaijAKShlgDMx68TxMOebZ+q
        e857jlD6Z3ku/2JyG/9mcw//XmsH/11sEf9cZw//ZWsP/2VrD/9jahP/X2oU/19sEf9daxP/YGoY/2Jq
        G/9mcRv/XWkP/19tD/9eahH/Xmgc/2NqIP9pbh35bnEcyWxxGmZobCUPkZFoAJCNdACmo6YAp6CfAK6k
        mACppIwAv8mfGa6/iFuhsG6mkJ9R24ONOvZ5gyj/bHkc/2t1Gf9pchT/aXIU/2dxF/9lcBP/X28L/2Bv
        Df9mbxf/aXMb/2l3E/9ygRj/dIMa/3eFIfV1gSnXeIAxoHuCOFR8gjsVjZVPAIeNWACHh3MAhIB+AKCd
        oACpoqMArqKdALGonACipJIApKqSAMzStAXEyKAera9/R6uteHOlpHKanqBluJGaTsyRnEvZkZpP4Y+Y
        TuSOmUrjjppI4I+ZTdiRm0zKi5hCtIaUO5aKlkJuipRFQoyTRxqLjlUDh4ZtAIWFeACCi3IAhY11AICD
        egCCgoIAoJ2gAKCbnACroJ8AqJ6bAKWingCmpp8ApaOaAKimlwCOjHYAkY52AOfhywG7upsIqLB8Eaix
        eRqor34hqq6AJKGndCSdo24gl55oGZKaYg+Ci04GZ3A0AYaMVwCOlGAAi49aAIuMaACIg4QAhIKOAIKH
        hgB9hH4Ag4aDAH+CgQABAAAAAQAAAAMAAAADAAAAAQAAAAEAAAADAAAAAwAAAAMAAAADAQAAAwAAAAMC
        AAABBAAAAQUAAAEEAAADBAAAAwQAAAMFAAADBQAAAwUAAAMFAAADBQAAAwUAAAMEAAADBQAAAwIAAAEA
        AAAAAAIAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAA
        AAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////////////////////wAP//AAAP+AA
        AAfAAAADgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAHAAAAD8AAAD/wAAD//wAP/////////
        //////////////////////////////////8=
</value>
  </data>
</root>